// Generated by view binder compiler. Do not edit!
package fr.isen.sebastien_SILVANO.androiderestaurant.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import fr.isen.sebastien_SILVANO.androiderestaurant.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LyoBleRecViewCellBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final View bleCellBg;

  @NonNull
  public final View bleCellBg2;

  @NonNull
  public final TextView bleCellContent;

  @NonNull
  public final TextView bleCellTitle;

  @NonNull
  public final ConstraintLayout bleRecViewCellGlobal;

  private LyoBleRecViewCellBinding(@NonNull ConstraintLayout rootView, @NonNull View bleCellBg,
      @NonNull View bleCellBg2, @NonNull TextView bleCellContent, @NonNull TextView bleCellTitle,
      @NonNull ConstraintLayout bleRecViewCellGlobal) {
    this.rootView = rootView;
    this.bleCellBg = bleCellBg;
    this.bleCellBg2 = bleCellBg2;
    this.bleCellContent = bleCellContent;
    this.bleCellTitle = bleCellTitle;
    this.bleRecViewCellGlobal = bleRecViewCellGlobal;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LyoBleRecViewCellBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LyoBleRecViewCellBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.lyo_ble_rec_view_cell, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LyoBleRecViewCellBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ble_cell_bg;
      View bleCellBg = rootView.findViewById(id);
      if (bleCellBg == null) {
        break missingId;
      }

      id = R.id.ble_cell_bg_2;
      View bleCellBg2 = rootView.findViewById(id);
      if (bleCellBg2 == null) {
        break missingId;
      }

      id = R.id.ble_cell_content;
      TextView bleCellContent = rootView.findViewById(id);
      if (bleCellContent == null) {
        break missingId;
      }

      id = R.id.ble_cell_title;
      TextView bleCellTitle = rootView.findViewById(id);
      if (bleCellTitle == null) {
        break missingId;
      }

      ConstraintLayout bleRecViewCellGlobal = (ConstraintLayout) rootView;

      return new LyoBleRecViewCellBinding((ConstraintLayout) rootView, bleCellBg, bleCellBg2,
          bleCellContent, bleCellTitle, bleRecViewCellGlobal);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
